@model Developer_Toolbox.Models.Exercise



<div class="container py-5">
    @if (TempData.ContainsKey("message"))
    {
        <h4 class="@ViewBag.MessageType p-3 rounded-3 text-center mb-5">@ViewBag.Message</h4>
    }
    <h2 class="text-center">Edit Exercise</h2>

    <div class="row">
        <div class="col-6 offset-3">
            <form class="d-flex flex-column gap-3 overflow-auto" method="post" enctype="multipart/form-data" action="/Exercises/Edit/@Model.Id">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div>
                    @Html.Label("Title", "Exercise Title")

                    @Html.TextBox("Title", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                <div>
                    <label>Select Category</label>
                    @Html.DropDownListFor(m => m.CategoryId,
                    new SelectList(Model.Categories, "Value", "Text"),
                    "Select Category", new { @class = "form-control" })

                    @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Description", "Exercise Description")

                    @Html.TextArea("Description", null, new { @class = "form-control"})
                    @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Summary", "Summary")

                    @Html.TextBox("Summary", null, new { @class = "form-control" })
                    @Html.ValidationMessage("Summary", null, new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Restrictions", "Restrictions")

                    @Html.TextArea("Restrictions", null, new { @class = "form-control summernote" })
                    @Html.ValidationMessage("Restrictions", null, new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Examples", "Examples")

                    @Html.TextArea("Examples", null, new { @class = "form-control summernote" })
                    @Html.ValidationMessage("Examples", null, new { @class = "text-danger" })
                </div>
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                        </symbol>
                        <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
                        </symbol>
                        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                        </symbol>
                    </svg>
                    <div class="alert alert-primary d-flex" role="alert">
                        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:"><use xlink:href="#info-fill" /></svg>
                        <div>
                            Please respect the following format for the test cases:<br /><br />
                            <p>
                            Test case #{test_case_number}:<br />
                            Input<br />
                            {input_values}<br />
                            Output<br />
                            {output_values}
                            </p>
                        </div>
                    </div>
                </div>
                <div>
                    @Html.Label("TestCases", "TestCases")

                    @Html.TextArea("TestCases", null, new { @class = "form-control test_cases"})
                    @Html.ValidationMessage("TestCases", null, new { @class = "text-danger" })
                </div>
          
                <div class="d-flex gap-1 justify-content-start mt-2">
                    @Html.Label("Level of difficulty")
                    @Html.DropDownListFor(
                    (ex => ex.Difficulty),
                    (IEnumerable<SelectListItem>)ViewBag.OptionsSelectList,
                    "Select",
                    new { @class = "form-control" }
                    )
                </div>
                <button class="btn btn-outline" style="background-color:#eee; color:black;" type="submit">Edit Exercise</button>
            </form>
        </div>
    </div>
</div>

