@model Developer_Toolbox.Models.Badge

<link rel="stylesheet" href="~/css/form.css" asp-append-version="true" />


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-md-12 col-sm-12">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Add Badge</h3>
                    <form method="post" enctype="multipart/form-data" action="/Badges/New">
                        <div class="mb-3">
                            @Html.Label("Title", "Badge title", new { @class = "form-label" })

                            @Html.TextBox("Title", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Description", "Badge description", new { @class = "form-label" })

                            @Html.TextArea("Description", null, new { @class = "form-control"})
                            @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label for="file" class="form-label">Upload Image</label>
                            <input type="file" id="file" name="file" class="form-control" />
                            @Html.ValidationMessage("Image", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Select activity</label>
                            @Html.DropDownListFor(m => m.TargetActivityId,
                            new SelectList(Model.TargetActivities, "Value", "Text"),
                            "Selected activity", new { @id = "targetActivity", @class = "form-control"})
                        </div>
                        <div class="mb-3 noOfTimes">
                            @Html.Label("TargetNoOfTimes", "Number of times the activity must be completed", new { @class = "form-label"})

                            @Html.Editor("TargetNoOfTimes", null, new { htmlAttributes = new { @class="form-control"}})
                        </div>

                        <div class="mb-3">
                            <div class="optionalFields practiceRelated">
                                <label class="form-label">Select targeted category</label>
                                @Html.DropDownListFor(m => m.TargetCategoryId,
                                new SelectList(Model.TargetCategories, "Value", "Text"),
                                "Selected category", new { @id = "targetCategory", @class = "form-control"})
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="optionalFields practiceRelated">
                                @Html.Label("Targeted level of difficulty", null, new { @class = "form-label"})
                                @Html.DropDownListFor(
                                (badge => badge.TargetLevel),
                                (IEnumerable<SelectListItem>)ViewBag.LevelOfDifficulty,
                                "Select",
                                new { @id = "targetDifficulty", @class = "form-control"}
                                )
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="optionalFields questionRelated">
                                <label class="form-label">Select targeted tags (optional)</label>
                                @Html.ListBoxFor(m => m.SelectedTagsIds,
                                new SelectList(Model.TargetTagsItems, "Value", "Text"),
                                new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="optionalFields challengesRelated">
                            <label>Select targeted weekly challenges (optional)</label>
                            @Html.ListBoxFor(m => m.SelectedChallengesIds,
                            new SelectList(Model.WeeklyChallengesItems, "Value", "Text"),
                            new { @class = "form-control" })
                        </div>

                        <!-- Submit Button -->
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg">Submit</button>
                            <div id="formFeedback" class="mt-3"></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#targetActivity').change(function () {


                var selectedActivityId = $(this).val();

                if (selectedActivityId !== '') {

                    var allActivities = @Html.Raw(Json.Serialize(Model.AllTargetActivities));
                    var selectedActivity = allActivities.find(act => act.id == selectedActivityId);

                    if (selectedActivity.isPracticeRelated == null) {
                        $('.optionalFields').hide();
                        $('.noOfTimes').show();
                    } else {
                        if (selectedActivity.isPracticeRelated) {
                            if (selectedActivity.id == 5) {
                                $('.challengesRelated').show();
                                $('.practiceRelated').hide();
                                $('.noOfTimes').hide();
                            } else {
                                $('.practiceRelated').show();
                                $('.noOfTimes').show();
                                $('.challengesRelated').hide();
                            }
                            $('.questionRelated').hide();
                        } else {
                            $('.practiceRelated').hide();
                            $('.challengesRelated').hide();
                            $('.questionRelated').show();
                            $('.noOfTimes').show();
                        }
                    }
                } else {
                    $('.optionalFields').hide();
                    $('.noOfTimes').show();
                }
            });

            // Initially hide the additional fields
            $('.optionalFields').hide();
            $('.noOfTimes').show();
        });
    </script>
}