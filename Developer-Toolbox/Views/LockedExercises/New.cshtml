@model Developer_Toolbox.Models.LockedExercise

<link rel="stylesheet" href="~/css/form.css" asp-append-version="true" />

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-md-12 col-sm-12">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Add exercise</h3>
                    <form method="post" enctype="multipart/form-data" action="/LockedExercises/New">
                        <div class="mb-3">
                            @Html.Label("Title", "Exercise Title")

                            @Html.TextBox("Title", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label>Select Learning Path</label>
                            @Html.DropDownListFor(m => m.LearningPathId,
                            new SelectList(Model.LearningPaths, "Value", "Text"),
                            "Select Learning Path", new { @class = "form-control" })

                            @Html.ValidationMessageFor(m => m.LearningPathId, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Instructions", "Instructions")

                            @Html.TextBox("Instructions", null, new { @class = "form-control" })
                            @Html.ValidationMessage("Instructions", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Summary", "Summary")

                            @Html.TextBox("Summary", null, new { @class = "form-control" })
                            @Html.ValidationMessage("Summary", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Description", "Exercise Description")

                            @Html.TextArea("Description", null, new { @class = "form-control" })
                            @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Restrictions", "Restrictions")

                            @Html.TextArea("Restrictions", null, new { @class = "summernote" })
                            @Html.ValidationMessage("Restrictions", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Examples")

                            @Html.TextArea("Examples", null, new { @class = "summernote" })
                            @Html.ValidationMessage("Examples", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <div class="d-flex">
                                @Html.Label("TestCases", "Test Cases", new { @class = "form-label" })
                                <a href="#" data-bs-toggle="tooltip" data-html="true" data-title="<div>Please respect the following format for the test cases:<br /><br /><p>Test case #{test_case_number}:<br />Input<br />{input_values}<br />Output<br />{output_values}</p></div>"><i class="bi bi-info-circle" style="padding-left: 0.5rem"></i></a>
                            </div>
                            @Html.TextArea("TestCases", null, new { @class = "form-control test_cases"})
                            @Html.ValidationMessage("TestCases", null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.Label("Level of difficulty")
                            @Html.DropDownListFor(m => m.Difficulty,
                            (IEnumerable<SelectListItem>)ViewBag.OptionsSelectList,
                            "Select",
                            new { @class = "form-control" })
                        </div>

                        <!-- Submit Button -->
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg">Submit</button>
                            <div id="formFeedback" class="mt-3"></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                html: true
            })
        })
    });
</script>

